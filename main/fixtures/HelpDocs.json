[{"model": "main.helpdocs", "pk": 2, "fields": {"title": "Staff Subject List", "text": "<p><span style=\"text-decoration: underline;\"><strong>Controls</strong></span></p>\r\n<p><strong>Upload Email list:&nbsp;</strong>Enter a TAB, comma, and/or carriage return-separated list that will be loaded sequentially into the clients.&nbsp;&nbsp;</p>\r\n<p><strong>Copy Earnings:&nbsp;</strong>Copy Student IDs and Earnings to the clipboard in an ESI Recruiter-compatible format.</p>\r\n<p><strong>Anonymize Data:&nbsp;</strong>Once the payments have been exported, this will remove the subject names, emails, and student IDs from the dataset.</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"text-decoration: underline;\"><strong>Table</strong></span></p>\r\n<p><strong>Client #:</strong>&nbsp; Each client is numbered from 1 to 24.</p>\r\n<p><strong>Name:</strong>&nbsp;Subject's full name.</p>\r\n<p><strong>Student ID:&nbsp;</strong>Subject's student id number.</p>\r\n<p><strong>Email:&nbsp;</strong>Email address to send private invitation links to.</p>\r\n<p><strong>Earnings:&nbsp;</strong>Earnings in USD up to this point in the experiment.</p>\r\n<p><strong>ID Label:&nbsp;</strong>Subject's in-experiment ID that is visible to other subjects.</p>\r\n<p><strong>Shareable Log-In Link: </strong>This unique&nbsp;link that can be shared with subjects to log in as this client.</p>\r\n<p><strong>Connected:&nbsp;</strong>Connection status of client to the experiment.</p>\r\n<p><strong>Instruction:&nbsp;</strong>During the instruction phase, this shows the current instruction status for the subject.</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"text-decoration: underline;\"><strong>Login</strong></span></p>\r\n<p><strong>Next available connection:&nbsp;</strong>Log in as the next available client that has not Connected.&nbsp; Note that a subject could log in multiple times by opening this link in multiple windows. This link will auto-forward to the Shareable Log-In Link defined above.</p>\r\n<p><strong>Login by client number:&nbsp;</strong>Log in as specified client by number.&nbsp; Replace \"[client_number]\" in the link with the desired client number ranging from 1 to 24.&nbsp; Note that subject could log in as any client by changing the client_number. This link will auto-forward to the Shareable Log-In Link defined above.</p>", "timestamp": "2023-09-18T22:41:05.730Z", "updated": "2023-09-18T22:45:16.605Z"}}, {"model": "main.helpdocs", "pk": 3, "fields": {"title": "Staff Control", "text": "<p><strong>Start Session:&nbsp;</strong>Starts the session and the subject screens will switch to the first phase of the experiment.</p>\r\n<p><strong>Show Instructions:&nbsp;</strong>Once all subjects have picked an avatar, show the experiment instructions.&nbsp; If subjects are not picking an avatar, the instructions will show when the Start Session button is pressed.&nbsp; Instructions can be optionally disabled in the parameters.</p>\r\n<p><strong>Continue Session:&nbsp;</strong>Once all subjects have (optionally) completed the instructions, start the experiment.&nbsp; The instructions will be hidden, and the first period will start.</p>\r\n<p><strong>Start/Stop Timer:&nbsp;</strong>Once the experiment is started, press the Start Timer button to begin the clock.&nbsp; The clock runs inside the connection for the browser tab that pressed the Start Timer button.&nbsp; If that browser tab is refreshed or loses connection with the server, the clock will stop.&nbsp; If this happens, press Stop Timer and then Start Timer to resume from the point the clock stopped.&nbsp; The experiment's progress is stored on the server and will not be lost.</p>\r\n<p><strong>Reset Connection Status:&nbsp;</strong>Sets all client connection statuses to \"disconnected\".&nbsp; Note that this will not disconnect any connected clients. This only changes the status.&nbsp; This will re-open all clients to auto connection.</p>\r\n<p><strong>Reset Session:&nbsp;&nbsp;</strong>Remove all data and reset the experiment back to the pre-start state.</p>\r\n<p><strong>Send Invitations:&nbsp;&nbsp;</strong>Send an email to any subjects that have an email defined.&nbsp; The email will contain their private login link.</p>", "timestamp": "2023-09-18T22:47:24.108Z", "updated": "2023-09-18T22:47:24.108Z"}}, {"model": "main.helpdocs", "pk": 4, "fields": {"title": "Staff Parameters General", "text": "<p><strong>Number of Periods</strong>: Number of periods in session.</p>\r\n<p><strong>Period Length (seconds)</strong>: Period length in seconds.</p>\r\n<p><strong>Night Length (seconds)</strong>: Portion of period that is night.</p>\r\n<p><strong>Break Frequency (periods)</strong>: Every N periods add an additional break length.</p>\r\n<p><strong>Break Length (seconds)</strong>: Every N periods add an additional break length.</p>\r\n<p><strong>Show Instructions</strong>: Show or skip the instructions phase.</p>\r\n<p><strong>Instruction Set</strong>: Name of instruction set to run. Instructions are defined in the admin panel.</p>\r\n<p><strong>Show Survey</strong>: Show the survey after the experiment ends.</p>\r\n<p><strong>Prolific Mode</strong>: Run software with subjects from the Prolific database.</p>\r\n<p><strong>Interaction Length (seconds)</strong>: Length of time a forced interaction will last.</p>\r\n<p><strong>Interaction Range (Pixels)</strong>: Max distance an object can be away from an avatar for an interaction.</p>\r\n<p><strong>Cool Down Length (seconds)</strong>: After a forced interaction, time an avatar must wait until the next forced interaction.</p>\r\n<p><strong>Starting Health (0-100)</strong>: Starting health of the avatars.</p>\r\n<p><strong>Health Loss Per Second</strong>: Health is lost by avatars each second due to metabolism.</p>\r\n<p><strong>Health Gain Per Sleep Second</strong>: Health gained each second while the avatar is asleep at night. No metabolism while sleeping.</p>\r\n<p><strong>Consumption Alpha</strong>: (&beta; * Good_1<sup>1/&alpha;</sup> + &beta; * Good_2 <sup>1/&alpha;</sup>)<sup>&alpha;</sup></p>\r\n<p><strong>Consumption Beta</strong>: (&beta; * Good_1<sup>1/&alpha;</sup> + &beta; * Good_2 <sup>1/&alpha;</sup>)<sup>&alpha;</sup></p>\r\n<p><strong>Cents Per Second</strong>: US cents earned per second times current health.</p>\r\n<p><strong>Allow Attacks</strong>: Allow avatars to attach each other at a cost to health.</p>\r\n<p><strong>Attack Cost (Health)</strong>: Health cost incurred by the attacker.</p>\r\n<p><strong>Attack Damage (Health)</strong>: Health damage taken by the target.</p>\r\n<p><strong>Sleep Benefit (Health)</strong>: Health gained per second of sleep.</p>\r\n<p><strong>Allow Stealing</strong>: If true, avatars can harvest from fields that do not belong to them.</p>\r\n<p><strong>Avatar Scale</strong>: Shrink avatar.</p>\r\n<p><strong>Avatar Bounding Box Percent</strong>: Bounding box around the avatar to allow an interaction.</p>\r\n<p><strong>Production Effort</strong>: Number of productive units available in each field.</p>\r\n<p><strong>Max Patch Harvests per Period</strong>: Number of harvests each avatar can make to resource patch each period.</p>\r\n<p><strong>Chat Mode</strong>: Limited allows only the selected words through unchanged. The remaining words are scrambled. Numbers and symbols always go through.</p>\r\n<p><strong>Good Mode</strong>: Three good mode uses the third good as a utility multiplier.</p>\r\n<p><strong>Test Mode</strong>: Bots will play as subjects.</p>", "timestamp": "2023-09-18T23:19:46.708Z", "updated": "2023-09-19T17:09:19.806Z"}}, {"model": "main.helpdocs", "pk": 5, "fields": {"title": "Staff Parameters Players", "text": "<p><strong>Label</strong>: Name visible to all subjects in session.</p>\r\n<p><strong>Group</strong>: The group player is in.&nbsp; &nbsp;&nbsp;</p>\r\n<p><strong>Avatar </strong>Location (X,Y): Starting location of the player's avatar.</p>\r\n<p><strong>House </strong>Location (X,Y): Location of the player's house.</p>\r\n<p><strong>Color</strong>: Hex color of the player's avatar and house.</p>\r\n<p><strong>Good One</strong>: Player's first good.</p>\r\n<p><strong>Good Two</strong>: Player's second good.</p>\r\n<p>&nbsp;<strong>Good Three</strong>: In three-good mode, the player's third good. Leave blank in two-good mode.</p>", "timestamp": "2023-09-19T15:29:57.028Z", "updated": "2023-09-19T15:30:50.487Z"}}, {"model": "main.helpdocs", "pk": 6, "fields": {"title": "Staff Parameters groups", "text": "<p>Players in the same group can always interact is each other's houses and fields.</p>", "timestamp": "2023-09-19T15:31:45.498Z", "updated": "2023-09-19T15:31:45.498Z"}}, {"model": "main.helpdocs", "pk": 7, "fields": {"title": "Staff Parameters Notices", "text": "<p><strong>Text</strong>: On-screen text.</p>\r\n<p><strong>Start Period</strong>: The period the notice will start on.</p>\r\n<p><strong>Start Time</strong>: The time when the notice will show.</p>\r\n<p><strong>End Period</strong>: The period the notice will stop.</p>\r\n<p><strong>End Time</strong>: The time the notice will stop.</p>", "timestamp": "2023-09-19T15:34:08.123Z", "updated": "2023-09-19T15:34:08.123Z"}}, {"model": "main.helpdocs", "pk": 8, "fields": {"title": "Staff Parameters Walls", "text": "<p><strong>Info</strong>: Description of the wall location</p>\r\n<p><strong>Location</strong>: X/Y location of the top left corner of the wall.</p>\r\n<p><strong>Width</strong>: Width of the wall segment.</p>\r\n<p><strong>Height</strong>: Height of the wall segment.</p>", "timestamp": "2023-09-19T15:40:06.121Z", "updated": "2023-09-19T15:44:33.012Z"}}, {"model": "main.helpdocs", "pk": 9, "fields": {"title": "Staff Parameters grounds", "text": "<p><strong>Info</strong>: Description of the ground element.</p>\r\n<p><strong>Location</strong>: X/Y location of top left corner.</p>\r\n<p><strong>Width</strong>: Width of element in pixels.</p>\r\n<p><strong>Height</strong>: Height of element in pixels.</p>\r\n<p><strong>Tint</strong>: Colorize the element with a hex color.</p>\r\n<p><strong>Texture</strong>: Pre-loaded texture of element.</p>\r\n<p><strong>Rotation</strong>: Rotation in degrees of texture.</p>\r\n<p><strong>Scale</strong>: Scale of texture.</p>", "timestamp": "2023-09-19T15:43:03.034Z", "updated": "2023-09-19T15:43:03.034Z"}}, {"model": "main.helpdocs", "pk": 10, "fields": {"title": "Staff Parameters field_types", "text": "<p>Info: Description of field type.</p>\r\n<p>Display Text: Informational text about the field displayed to subjects.</p>\r\n<p>Good One: First good the field produces.</p>\r\n<p>Good Two: Second good the field produces.</p>\r\n<p>Start on Period: In the first period, the field starts production. The field produces nothing until this period.</p>\r\n<p>&nbsp;Reset Every N Periods: Destroy un-harvested goods every N periods.</p>\r\n<p>Good One Production Standard Period = &rho;<sub>1</sub> * &alpha;<sub>1</sub> * Effort<sub>1</sub><sup>&omega;<sub>1</sub></sup></p>\r\n<p>Good One Bonus Period =&nbsp; ((&rho;<sub>1</sub> * &alpha;<sub>1</sub> * Effort<sub>1</sub><sup>&omega;<sub>1</sub></sup>) - Harvest_Last_Period<sub>1</sub>) / &rho;<sub>1</sub></p>\r\n<p>Good Two Production = &rho;<sub>2</sub> * &alpha;<sub>2</sub> * Effort<sub>2</sub><sup>&omega;<sub>2</sub></sup></p>\r\n<p>Good Two Bonus Period =&nbsp; ((&rho;<sub>2</sub> * &alpha;<sub>2</sub> * Effort<sub>2</sub><sup>&omega;<sub>2</sub></sup>) - Harvest_Last_Period<sub>2</sub>) / &rho;<sub>2</sub></p>", "timestamp": "2023-09-19T16:01:41.929Z", "updated": "2023-09-19T16:46:23.589Z"}}, {"model": "main.helpdocs", "pk": 11, "fields": {"title": "Staff Parameters Barriers", "text": "<p><strong>Info</strong>: Description of the barrier.</p>\r\n<p><strong>Text</strong>: Text displayed to subject on barrier.</p>\r\n<p><strong>Text Rotation</strong>: Text rotation in degrees.</p>\r\n<p><strong>Blocked Groups</strong>: Groups that the barrier blocks from crossing.</p>\r\n<p><strong>Location</strong>: X/Y location of top left corner.</p>\r\n<p><strong>Size</strong>: Width and Height of the barrier.</p>\r\n<p><strong>Period On/Off</strong>: Period the barrier activates and deactivates.</p>", "timestamp": "2023-09-19T16:49:46.247Z", "updated": "2023-09-19T16:49:46.247Z"}}, {"model": "main.helpdocs", "pk": 12, "fields": {"title": "Staff Parameters fields", "text": "<p><strong>Player</strong>: Owner of the field.</p>\r\n<p><strong>Field Type</strong>: Type of Field.</p>\r\n<p><strong>Location (X, Y)</strong>: X/Y location of the center of the field.</p>", "timestamp": "2023-09-19T16:56:58.113Z", "updated": "2023-09-19T16:56:58.113Z"}}, {"model": "main.helpdocs", "pk": 13, "fields": {"title": "Staff Parameters Patches", "text": "<p><strong>Info</strong>: Description of the resource patch.</p>\r\n<p><strong>Good</strong>: The good the resource patch generates.</p>\r\n<p><strong>Location (X,Y)</strong>: The location of the center of the resource patch.</p>\r\n<p><strong>Shock On Period</strong>: The period the patch's levels move to shock levels.</p>\r\n<p><strong>Group</strong>: The group to which the patch belongs. Used for testing.</p>\r\n<p><strong>Starting Levels</strong>: The patch's levels at the start of the experiment.</p>\r\n<p><strong>Shock Levels</strong>: The patch's levels from the shock period onwards.</p>", "timestamp": "2023-09-19T17:06:43.040Z", "updated": "2023-09-19T17:06:43.040Z"}}]